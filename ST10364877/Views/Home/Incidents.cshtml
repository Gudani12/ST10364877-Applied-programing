@model IEnumerable<ST10364877.Models.IncidentReport>
@{
    ViewData["Title"] = "Emergency Incidents - Disaster Alleviation Foundation";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-5">
        <div>
            <h1 class="display-5 fw-bold gradient-text">Emergency Incidents</h1>
            <p class="text-muted">Current disaster situations and relief efforts</p>
        </div>
        <a asp-action="ReportIncident" class="btn btn-modern">
            <i class="fas fa-plus me-2"></i>Report New Incident
        </a>
    </div>

    @if (!Model.Any())
    {
        <div class="text-center py-5">
            <div class="glass-card p-5">
                <i class="fas fa-exclamation-triangle display-1 text-muted mb-3"></i>
                <h3 class="text-muted mb-3">No Active Incidents</h3>
                <p class="text-muted mb-4">There are currently no reported incidents in your area.</p>
                <a asp-action="ReportIncident" class="btn btn-modern">
                    <i class="fas fa-plus me-2"></i>Report First Incident
                </a>
            </div>
        </div>
    }
    else
    {
        <div class="row g-4">
            @foreach (var incident in Model)
            {
                <div class="col-md-6 col-lg-4">
                    <div class="glass-card p-4 h-100">
                        <div class="d-flex justify-content-between align-items-start mb-3">
                            <span class="badge @GetUrgencyBadgeClass(incident.UrgencyLevel) px-3 py-2">
                                @incident.UrgencyLevel
                            </span>
                            <small class="text-muted">@incident.ReportedAt.ToString("MMM dd")</small>
                        </div>

                        <h5 class="fw-bold text-dark mb-3">@incident.Title</h5>
                        <p class="text-muted mb-3">@GetShortDescription(incident.Description)</p>

                        <div class="mb-3">
                            <i class="fas fa-map-marker-alt text-primary me-2"></i>
                            <span class="text-dark">@incident.Location</span>
                        </div>

                        <div class="mb-3">
                            <i class="fas fa-calendar text-warning me-2"></i>
                            <span class="text-dark">@incident.IncidentDate.ToString("MMM dd, yyyy HH:mm")</span>
                        </div>

                        <div class="mb-3">
                            <i class="fas fa-tag text-info me-2"></i>
                            <span class="badge bg-secondary">@incident.DisasterType</span>
                        </div>

                        <div class="d-flex justify-content-between align-items-center mt-auto">
                            <span class="badge @GetStatusBadgeClass(incident.Status)">@incident.Status</span>
                            <a asp-action="Details" asp-route-id="@incident.IncidentId" class="btn btn-outline-primary btn-sm">
                                View Details
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@functions {
    string GetUrgencyBadgeClass(string urgency)
    {
        return urgency?.ToLower() switch
        {
            "critical" => "bg-danger",
            "high" => "bg-warning",
            "medium" => "bg-info",
            "low" => "bg-success",
            _ => "bg-secondary"
        };
    }

    string GetStatusBadgeClass(string status)
    {
        return status?.ToLower() switch
        {
            "pending" => "bg-warning text-dark",
            "under review" => "bg-info text-dark",
            "in progress" => "bg-primary",
            "resolved" => "bg-success",
            _ => "bg-secondary"
        };
    }

    string GetShortDescription(string description)
    {
        return description.Length > 100 ? description.Substring(0, 100) + "..." : description;
    }
}